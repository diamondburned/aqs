package main

import (
	"bytes"
	"encoding/json"
	"flag"
	"fmt"
	"go/format"
	"log"
	"os"

	"github.com/diamondburned/aqs"
	"github.com/k0kubun/pp"
)

func main() {
	var pkgname string
	flag.StringVar(&pkgname, "pkg", "data", "The package name to use")

	var imppath string
	flag.StringVar(&imppath, "import", "github.com/diamondburned/aqs", "The import path to use")

	flag.Parse()

	var file *os.File

	if filename := flag.Arg(0); filename == "-" {
		file = os.Stdin
	} else {
		f, err := os.Open(filename)
		if err != nil {
			log.Fatalln(err)
		}
		defer f.Close()
		file = f
	}

	var characters []aqs.Character

	if err := json.NewDecoder(file).Decode(&characters); err != nil {
		log.Fatalln("Failed to decode JSON:", err)
	}

	pp.ColoringEnabled = false

	var buf bytes.Buffer
	pp.Fprint(&buf, characters)

	b, err := format.Source(buf.Bytes())
	if err != nil {
		log.Println("Failed to format source:", err)
	}

	const pkg = `// Package %[1]s contains autogenerated data for aqs, the list of data involving
// anime characters, quotes, and such.
package %[1]s

import %q

func init() {
	aqs.Characters = append(aqs.Characters, characters...)
}

var characters = `

	fmt.Printf(pkg, pkgname, imppath)
	os.Stdout.Write(b)
}
